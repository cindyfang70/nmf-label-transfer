% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transfer_labels.R
\name{transfer_labels}
\alias{transfer_labels}
\title{Transfer labels from the source dataset to the target dataset}
\usage{
transfer_labels(
  targets,
  source,
  assay = "logcounts",
  annotationsName,
  technicalVarName,
  seed = 123,
  nmf_path = "nmf_mod.RDS",
  save_nmf = TRUE,
  ...
)
}
\arguments{
\item{targets}{A list of SingleCellExperiment or SpatialExperiment objects to transfer labels into}

\item{source}{A SingleCellExperiment or SpatialExperiment object with cell-type or spatial domain labels}

\item{assay}{Name of the assay in \code{source} to use for NMF}

\item{annotationsName}{Name of the annotations in \code{source} as found in the \code{colData}}

\item{technicalVarName}{Name of a technical variable in \code{source} as found in the \code{colData}, used to identify NMF factors representing batch effects.}

\item{seed}{A random seed}

\item{nmf_path}{if saving the NMF model to disk, the file path to save it to.}

\item{save_nmf}{TRUE/FALSE specifying whether to save the NMF model to disk}

\item{...}{Additional parameters passed to \code{run_nmf}}
}
\value{
A list of predicted labels for each dataset in \code{target}
}
\description{
Transfer labels from the source dataset to the target dataset
}
\examples{
library(spatialLIBD)
library(SpatialExperiment)

# fetch the data
ehub <- ExperimentHub::ExperimentHub()
layer_labs <- "BayesSpace_harmony_09"
data_type <- "spatialDLPFC_Visium"
vis_anno <- spatialLIBD::fetch_data(type = data_type, eh = ehub)

# select reference datasets
vis_anno_ref <- vis_anno[,which(vis_anno$sample_id \%in\% unique(vis_anno$sample_id)[c(1,2)])]

# select a target dataset
vis_anno_target <- vis_anno[,which(vis_anno$sample_id \%in\% unique(vis_anno$sample_id)[3])]

# transfer labels
res <- transfer_labels(targets=vis_anno_target,
            source=vis_anno_ref,
            assay="logcounts",
            annotationsName=layer_labs,
            technicalVarName="sample_id",
            save_nmf=FALSE, k=10, tol=1e-5)

target_with_preds <- res$targets
print(target_with_preds)
# display the results
table(target_with_preds$nmf_preds)

}
